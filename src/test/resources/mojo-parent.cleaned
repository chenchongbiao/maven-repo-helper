<?xml version="1.0" encoding="UTF-8"?>
<!--
    Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements. See the NOTICE
    file distributed with this work for additional information regarding copyright ownership. The ASF licenses this file
    to you under the Apache License, Version 2.0 (the "License"); you may not use this file except in compliance with
    the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by
    applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language
    governing permissions and limitations under the License.
  -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.codehaus.mojo</groupId>
	<artifactId>mojo-parent</artifactId>
	<version>debian</version>
	<packaging>pom</packaging>
	<parent>
		<groupId>org.codehaus</groupId>
		<artifactId>codehaus-parent</artifactId>
		<version>debian</version>
	</parent>

	<name>Codehaus Mojo Parent</name>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<mojo.java.target>1.4</mojo.java.target>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<!-- NOTE: We deliberately do not set maven.test.redirectTestOutputToFile here to workaround MNG-1992 -->
		<surefire.redirectTestOutputToFile>true</surefire.redirectTestOutputToFile>
		<!-- this property makes sure NetBeans 6.8+ picks up some formatting rules from checkstyle -->
		<netbeans.checkstyle.format>true</netbeans.checkstyle.format>
		<debian.hasPackageVersion/>
		<debian.mavenRules>org.codehaus.mojo mojo-parent pom s/.*/debian/ * *</debian.mavenRules>
		<debian.originalVersion>27</debian.originalVersion>
		<debian.package>libmojo-parent-java</debian.package>
	</properties>
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.apache.maven</groupId>
				<artifactId>maven-plugin-api</artifactId>
				<version>2.x</version>
			</dependency>
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>3.x</version>
				<scope>test</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>
	<build>
		<extensions>
		</extensions>
		<pluginManagement>
			<plugins>
				<!-- Apache plugins in alphabetical order -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-antrun-plugin</artifactId>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-assembly-plugin</artifactId>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-clean-plugin</artifactId>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<configuration>
						<encoding>${project.build.sourceEncoding}</encoding>
						<source>${mojo.java.target}</source>
						<target>${mojo.java.target}</target>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-deploy-plugin</artifactId>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-enforcer-plugin</artifactId>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-install-plugin</artifactId>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-invoker-plugin</artifactId>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-javadoc-plugin</artifactId>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-plugin-plugin</artifactId>
					<executions>
						<execution>
							<id>help-mojo</id>
							<goals>
								<goal>helpmojo</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-project-info-reports-plugin</artifactId>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-release-plugin</artifactId>
					<configuration>
						<tagBase>https://svn.codehaus.org/mojo/tags</tagBase>
						<useReleaseProfile>false</useReleaseProfile>
						<arguments>-Pmojo-release</arguments>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-site-plugin</artifactId>
					<!-- workaround for MSITE-459 -->
					<dependencies>
						<dependency>
							<groupId>org.apache.maven.doxia</groupId>
							<artifactId>doxia-module-xhtml</artifactId>
							<version>1.x</version>
							<exclusions>
								<exclusion>
									<groupId>org.apache.maven.doxia</groupId>
									<artifactId>doxia-module-xhtml</artifactId>
								</exclusion>
							</exclusions>
						</dependency>
					</dependencies>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-source-plugin</artifactId>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<configuration>
						<redirectTestOutputToFile>${surefire.redirectTestOutputToFile}</redirectTestOutputToFile>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-report-plugin</artifactId>
				</plugin>
				<!-- Codehaus plugins in alphabetical order -->
				<plugin>
					<groupId>org.codehaus.plexus</groupId>
					<artifactId>plexus-maven-plugin</artifactId>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>taglist-maven-plugin</artifactId>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<artifactId>maven-enforcer-plugin</artifactId>
				<executions>
					<execution>
						<id>mojo-enforcer-rules</id>
						<phase>verify</phase>
						<goals>
							<goal>enforce</goal>
						</goals>
						<configuration>
							<rules>
								<bannedDependencies>
									<excludes>
										<exclude>org.codehaus.plexus:plexus-component-api</exclude>
									</excludes>
									<message>The plexus-component-api conflicts with the plexus-container-default used by Maven. You probably added a dependency that is missing the exclusions.</message>
								</bannedDependencies>
								<requireNoRepositories>
									<message>Mojo is synchronized with repo1.maven.org.  The rules for repo1.maven.org are that pom.xml files should not include repository definitions.  If repository definitions are included, they must be limited to SNAPSHOT only repositories.</message>
									<banRepositories>true</banRepositories>
									<banPluginRepositories>true</banPluginRepositories>
									<!-- allow the codehaus and apache snapshot repos -->
									<allowedRepositories>
										<allowedRepository>codehaus.org</allowedRepository>
										<allowedRepository>apache.snapshots</allowedRepository>
										<allowedRepository>codehaus-snapshots</allowedRepository>
									</allowedRepositories>
									<allowedPluginRepositories>
										<allowedPluginRepository>codehaus.org</allowedPluginRepository>
										<allowedPluginRepository>apache.snapshots</allowedPluginRepository>
									</allowedPluginRepositories>
								</requireNoRepositories>
								<requirePluginVersions>
									<message>Best Practice is to always define plugin versions!</message>
									<banLatest>true</banLatest>
									<banRelease>true</banRelease>
								</requirePluginVersions>
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
	<reporting>
		<plugins>
			<!-- Apache plugins in alphabetical order -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-plugin-plugin</artifactId>
				<configuration>
					<requirements>
						<!--
            NOTE: Maven 2.x does not interpolate properties of the form project.*|pom.* so the Maven Plugin Plugin
            gets garbage when manually examining the config of the Maven Compiler Plugin.
            -->
						<jdk>${mojo.java.target}</jdk>
					</requirements>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-project-info-reports-plugin</artifactId>
				<reportSets>
					<reportSet>
						<reports>
							<report>cim</report>
							<report>index</report>
							<report>issue-tracking</report>
							<report>mailing-list</report>
							<report>project-team</report>
							<report>scm</report>
							<report>summary</report>
						</reports>
					</reportSet>
				</reportSets>
			</plugin>
		</plugins>
	</reporting>
</project>
